@model MVC_CRUD.Models.Emp

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    @Html.ActionLink("Create", "Create", "Emp", new { id = "123" }, null)
    @Html.ActionLink("Display", "Select", "Emp", new { id = "123" }, null)
    @Html.ActionLink("Edit", "Create", "Emp", new { id = "123" }, null)
    @Html.ActionLink("Delete", "Create", "Emp", new { id = "123" }, null)
    @using (Html.BeginForm("Create", "Emp",FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Emp</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <table>
                    <tr>
                        <td>@Html.LabelFor(model => model.emp_id, htmlAttributes: new { @class = "control-label col-md-2" })</td>
                        <td>
                            @Html.EditorFor(model => model.emp_id, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emp_id, "", new { @class = "text-danger" })
                    </td>
                </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.emp_name, htmlAttributes: new { @class = "control-label col-md-2" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.emp_name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.emp_name, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                           
                        </td>
                        <td>
                            @Html.RadioButtonFor(model =>model.gender,"Male", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.Label("Male", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.RadioButtonFor(model => model.gender, "Female", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.Label("Female", htmlAttributes: new { @class = "control-label col-md-2" })
                            @*@Html.EditorFor(model => model.gender, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-2" })
                            
                        </td>
                        <td>
                            @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.address1, htmlAttributes: new { @class = "control-label col-md-2" })
                           
                        </td>
                        <td>
                            @Html.TextAreaFor(model => model.address1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.address1, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
                            
                        </td>
                        <td>
                            @Html.EditorFor(model => model.country, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.phone_number, htmlAttributes: new { @class = "control-label col-md-2" })
                            
                        </td>
                        <td>
                            @Html.EditorFor(model => model.phone_number, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.phone_number, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.check, htmlAttributes: new { @class = "control-label col-md-2" })
                            
                        </td>
                        <td>
                            @for (int i = 0; i < Model.check.Count; i++)
                            {
                                @Html.CheckBoxFor(m => m.check[i].intrested, new { id = "employmentType_" + i })
                                @Html.HiddenFor(m => m.check[i].Text)
                                @Html.DisplayFor(m => m.check[i].Text)
                            }
                            @*@Html.CheckBoxFor(model=>model.check[i], new { htmlAttributes = new { @class = "form-control" } })
                            @Html.Label("PlayingGames", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.CheckBoxFor(model=>model.check, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.Label("Listing Songs", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.CheckBoxFor(Model => Model.check, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.Label("Watching Movies", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.ValidationMessageFor(model => model.check, "", new { @class = "text-danger" })*@
                        </td>
                    </tr>
                   
            </table>



        </div>
           
    <br/>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
